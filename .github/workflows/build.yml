name: Spidermonkey

permissions:
  contents: write

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

env:
  SHELL: /bin/bash
  # ccache
  CCACHE: ccache
  # use clang/lld
  CXX: clang++
  CC: clang
  LDFLAGS: -fuse-ld=lld
  LD_LIBRARY_PATH: /usr/local/lib
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-x86_64-unknown-linux-gnu:
    if: false
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v2
      - name: Install deps
        run: |
          sudo apt install ccache llvm clang lld meson ninja-build -y
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Get SM pkg
        run: bash ./tools/get_sm.sh
      - name: ccache cache files
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-${{ hashFiles('**/mozjs.tar.xz') }}
      - name: Build SpiderMonkey
        run: |
          cargo install cbindgen --force

          mkdir -p /tmp/mozjs
          tar -xf mozjs.tar.xz -C /tmp/mozjs
          cd /tmp/mozjs
          cd $(ls -d */|head -n 1)
          cd js/src
          bash $GITHUB_WORKSPACE/tools/generic_lib.sh $GITHUB_WORKSPACE/meson.build
          mkdir _build
          cd _build
          # ../configure --disable-jemalloc --with-system-zlib --with-intl-api --enable-debug --enable-optimize
          # ../configure --with-system-zlib --with-intl-api --enable-optimize --disable-debug
          ../configure --enable-optimize --disable-debug
          ccache -z
          make
          sudo make install
          ccache -s

          cd ..
          cp -r ./_build/dist/bin /tmp/mozjz_build

          sudo apt install tree -y

          cd /tmp/mozjz_build

          tree -hs > ~/tree.txt

          # rm -rf /tmp/mozjz_build/x86_64-unknown-linux-gnu
          # rm -rf /tmp/mozjz_build/debug
          rm -rf /tmp/mozjz_build/Test*
          rm -rf /tmp/mozjz_build/*.py
          rm -rf /tmp/mozjz_build/*-tests
          rm -rf /tmp/mozjz_build/nsinstall
          rm -rf /tmp/mozjz_build/.*


          cd ~
          tar -cJf ~/spidermonkey-x86_64-unknown-linux-gnu.tar.xz -C /tmp/mozjz_build .
      # - name: Upload Build Artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: tree
      #     path: ~/tree.txt

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: spidermonkey-x86_64-unknown-linux-gnu
          path: ~/spidermonkey-x86_64-unknown-linux-gnu.tar.xz
  # download:

  build:
    # needs: [
    # "build-x86_64-unknown-linux-gnu",
    # "download",
    # "build-windows",
    # "build-macos-x86_64",
    # "build-macos-aarch64",
    # ]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: download
        id: download
        run: |
          bash download.sh "jsshell-linux-x86_64.zip" x86_64-unknown-linux-gnu
          bash download.sh "jsshell-win64.zip" x86_64-pc-windows-msvc
          bash download.sh "jsshell-mac.zip" x86_64-apple-darwin
          bash download.sh "jsshell-mac.zip" aarch64-apple-darwin

      - name: Upload x86_64-pc-windows-msvc
        uses: actions/upload-artifact@v4
        with:
          name: spidermonkey-x86_64-pc-windows-msvc
          path: spidermonkey-x86_64-pc-windows-msvc.zip

      - name: Upload spidermonkey-aarch64-apple-darwin
        uses: actions/upload-artifact@v4
        with:
          name: spidermonkey-aarch64-apple-darwin
          path: spidermonkey-aarch64-apple-darwin.tar.gz

      - name: Upload spidermonkey-x86_64-apple-darwin
        uses: actions/upload-artifact@v4
        with:
          name: spidermonkey-x86_64-apple-darwin
          path: spidermonkey-x86_64-apple-darwin.tar.gz

      - name: Upload spidermonkey-x86_64-unknown-linux-gnu
        uses: actions/upload-artifact@v4
        with:
          name: spidermonkey-x86_64-unknown-linux-gnu
          path: spidermonkey-x86_64-unknown-linux-gnu.tar.gz
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: spidermonkey
          pattern: spidermonkey-*
          merge-multiple: true

      - name: release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.download.outputs.tag }}
          artifacts: "spidermonkey/*"
          allowUpdates: true
  test-release:
    needs: ["build"]
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-latest, macos-14, macos-13]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: wait
        run: |
          sleep 120
      - uses: easy-install/easy-setup@v1
        with:
          url: https://github.com/ahaoboy/spidermonkey-build
      - name: test
        run: |
          which js
          js ./test.js
